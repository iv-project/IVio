name: "Coverage"

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'main'
  pull_request:

concurrency:
  group: Coverage-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TZ: Europe/Berlin

jobs:
  build:
    name: ${{ matrix.os }} / ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        osname: ["Ubuntu 22.04"]
        compiler: ["gcc12 (c++20)"]
        include:
          - osname: "Ubuntu 22.04"
            os: ubuntu-22.04
            compiler: "gcc12 (c++20)"
            cxx: "g++-12"
            cc: "gcc-12"
            gcov: "gcov-12"
            build_type: Debug
            brew_pkgs: gcc@12 lcov
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          path: ivio
          fetch-depth: 1

      - name: Install Tools on Ubuntu
        run: |
          NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          echo 'eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"' >> ${HOME}/.activate_brew
          eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
          sudo apt-get update -y
          sudo apt-get install -y build-essential libfmt-dev
          brew install --force-bottle zlib boost cmake fmt pkg-config ${{ matrix.brew_pkgs }}
          ${{ matrix.cxx }} --version

      - name: Force brew package
        run: |
          echo 'export LIBRARY_PATH=/home/linuxbrew/.linuxbrew/lib' >> ${HOME}/.activate_brew
        if: matrix.compiler == 'gcc10 (c++20)'

      - name: Tool versions
        run: |
          source ${HOME}/.activate_brew
          cmake --version
          ${{ matrix.cxx }} --version
          lcov --version
          which lcov
          find /home/linuxbrew/.linuxbrew

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          source ${HOME}/.activate_brew
          mkdir ivio/ivio-build && cd $_
          cmake .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.cmake_flags }} -DCMAKE_CXX_FLAGS="--coverage" -DCMAKE_C_FLAGS="--coverage"

      - name: Build tests
        run: |
          source ${HOME}/.activate_brew
          cd ivio/ivio-build
          make -k -j2

      - name: Run tests
        run: |
          source ${HOME}/.activate_brew
          cd ivio/ivio-build
          ctest . -j ${{ matrix.threads }} --output-on-failure
      - name: Generate report and upload
        run: |
          source ${HOME}/.activate_brew
          cd ivio/ivio-build
          lcov -c --directory . --output coverage.info --gcov ${{ matrix.gcov }}
          lcov --remove coverage.info '/usr/include/*' --output-file coverage.info
          lcov --remove coverage.info '/home/linuxbrew/*' --output-file coverage.info
          lcov --remove coverage.info '*/lib/*' --output-file coverage.info
          lcov --list coverage.info
          #gcovr -r ../ivio . --xml -o report.xml -e ../ivio/lib --exclude-noncode-lines --exclude-unreachable-branches --exclude-function-lines
          #gcovr -r ../ . --html --html-details --html-syntax-highlighting -o report.html -e ../lib
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${{ secrets.CODECOV }} -f coverage.info -B ${{ github.ref_name }}
